Find all female users from Jaipur who know Python.

    (ans)
 db.user.aggregate(
  [
  {
    $match: {
      gender:"Female",
      city:"Jaipur",
      skills:"Python"
    }
  }
]
 )

Find all male users in Delhi who are above age 26
(ans)db.user.aggregate(
    [
  {
    $match: {
      city:"New Delhi",
      gender:"Male",
      age:{$gt:26}
      }
  }
]
)

Find all users who are from either New Delhi or Mumbai.

db.user.aggregate(
    [
  {
    $match: {
      city:{$in:["new Delhi","Mumbai"]}
      }
  }
]
)

Find all users who have the same last name.
[
  {
 $group: {
     _id: "$lastName",
   countusers:{$sum:1},
   user:{$push:"$$ROOT"}

 }
  },
]


Find the count of users in each city.
db.user.aggrigate(
 [
  {
 $group: {
     _id: "$city",
   countusers:{$sum:1},
 }
  },

]
)
find total male and Female in document in group.

db.user.aggrigate(
 [
  {
 $group: {
     _id: "$city",
   countusers:{$sum:1},
 }
  },

]
)

based on age group and find total no of documents in each age group

db.user.aggrigate(
 [
  {
 $group: {
     _id: "$age",
   countusers:{$sum:1},
 }
  },

]
)
How many users are from New Delhi?
(ans)db.user.aggegate(
[
  {
    $match: {
      city:"New Delhi"
    }
  },
  {
    $count: 'totalusersfromNew DElhi'
  }
]
)
How many Female users are from Jaipur?
(ans)db.user.aggegate(
[
  {
    $match: {
      city:"Jaipur",
      gender:"Female"
    }
  },
  {
    $count: 'totalFemaleusersfromJaipur'
  }
]
)


How many Male users are there in Delhi who have skills Java?

(ans)db.user.aggegate(
[
  {
    $match: {
      city:"New Delhi",
      gender:"Male",
      skills:"Python"
    }
  },
  {
    $count: 'totalusersfromNew DElhihaveskillspython'
  }
]
)

How many users are from Hyderabad having age greater than 24 and have skill Python,C++
(ans)db.user.aggegate(
  [
  {
    $match: {
      city:"Hyderabad",
      age:{$gt:24},
      skills:{$all:["Java","C++"]}
    }
  },
  {
    $count:'Javacppfromhyderabad'
  }
]
)

How many female users are from Goa having age greater than 24 and have skill Python,C++

db.user.find(
  [
  {
    $match: {
      city:"Goa",
      gender:"Female",
      age:{$gt:24},
      skills:{$all:["Python","C++"]}
    }
  },
  {
    $count:'PythoncppfromGoagenderfemale'
  }
]
)


//groups

can be done on the basis of any key
documents ko on the basis of skills,gender,city,



1. Group users by role and calculate the average salary for each role.

$average ka use karke ham everage nikal sakty hai
ans=> db.user.aggegate(
  [
  {
    $group: {
      _id: "$role",
      averagesal:{$avg:"$salary"}
      }
  }
]
)
2. Group users by city and find the total number of users in each city.

db.user.aggegate(
  [
  {
    $group: {
      _id: "$city",
user:{$sum:1}
      }
  }
]
)
3. Group users by gender and determine the average age for each gender.

db.user.aggegate(
  [
  {
    $group: {
      _id: "$gender",
averageAge:{$avg:"$avg"}
      }
  }
]
)
4. Group users by role and city, and calculate the total salary for each subgroup.

db.user.aggegate(
  [
  {
    $group: {
      _id: {role:"$role",city:"city"},
averageAge:{$sum:"$salary"}
      }
  }
]
)
5. Group users by gender and city, and find the maximum salary in each subgroup.
db.user.aggegate(
[
  {
    $group: {
      _id: {role:"$gender",city:"$city"},
maxsal:{$max:"$salary"}
      }
  }
]
)
6. Group users by skills and count how many users have each skill.
$unwind ka use kregy array ko todne ke liy
db.user.aggegate(
[
  {
   $unwind:"$skills"
  },
{
  $group: {
    _id: "$skills",
    skillcount:{$sum:1},
    user:{$push:"$$ROOT"}
  }
}
]
)
7. Group users by role and find the minimum age for each role.

db.user.aggegate(
  [
  {
    $group: {
      _id: "$role",
      minAge:{$min:"$age"}

    }
  }
]
)
8. Group users by city and gender, and calculate the average salary for each subgroup.
db.user.aggegate(

)
9. Group users by role and determine the total number of unique cities for each role.
db.user.aggegate(
[
  {
    $group: {
      _id: "$role",
      uniqueCity:{$addToSet:"$city"}
    }
  },

  {
    $project: {
      totaluniqueCity:{$size:"$uniqueCity"}
    }
  }
]
)
10. Group users by age and count the number of users in each age group.db.user.aggegate(

[
  {
    $group: {
      _id: "$age",
      usercount:{$sum:1}
    }
      }
  ]
)